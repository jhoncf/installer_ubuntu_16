#/bin/bash

install_lamp(){

	echo "Update nos pacotes";
	sudo apt-get update;

	echo "Instalando apache2";
	sudo apt-get install apache2;

	echo "Instalando curl";
	sudo apt-get install curl;

	echo "Instalando mysql-server";
	sudo apt-get install mysql-server;
	sudo mysql_secure_installation

	echo "Instalando PHP";
	sudo apt-get install php libapache2-mod-php php-mcrypt php-mysql;

	echo "Restart do apache para ativação do PHP";
	sudo systemctl restart apache2;

	exit 0;
}

install_mongodb(){
	
	echo "Importando public key";
	sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6;
	
	echo "Adicionando source do repositório";
	echo "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list;
	
	echo "Update nos pacotes";	
	sudo apt-get update;

	echo "Instalando mongodb";
	sudo apt-get install -y mongodb-org;

        echo "Iniciando serviço";
	sudo service mongod start;

	exit 0;
}

install_docker(){

	echo "Update repositório";
	sudo apt-get update;

	echo "Importando public key";
	sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D;

	echo "Adicionando repositório docker à lista de source";
	sudo apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main';

        echo "Update repositório";
	sudo apt-get update;

	echo "Instalando Docker";
	sudo apt-get install -y docker-engine;

	sudo systemctl status docker;

	echo "Adicionando usuário atual ao grupo do docker";
	sudo usermod -aG docker $(whoami);

	echo "Done!";

	exit 0;
}

install_composer(){
	echo "Update repositório";
        sudo apt-get update;

	sudo apt-get install curl php5-cli;
	
	curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer;

	composer;

	exit 0;
}

install_phpunit(){
	cd ~/
	wget https://phar.phpunit.de/phpunit.phar;
	chmod +x phpunit.phar;
	sudo mv phpunit.phar /usr/local/bin/phpunit;
	phpunit --version;
	exit 0;
}

install_nodejs(){
	sudo apt-get update;
	sudo apt-get install nodejs;
	sudo apt-get install npm;

	echo "";
	echo "Finalizado!";
}

install_apidoc(){
	install_nodejs;
        sudo apt-get install nodejs-legacy;
	sudo npm install apidoc -g;
}

install_fail2ban(){
	sudo apt-get update;
	sudo apt-get install fail2ban;
	awk '{ printf "# "; print; }' /etc/fail2ban/jail.conf | sudo tee /etc/fail2ban/jail.local;
}

case "$1" in

	"lamp")
		install_lamp;
    		;;
	"mongodb")
		install_mongodb;
		;;
	"docker")
		install_docker;
		;;
	"composer")
		install_composer;
		;;
	"phpunit")
		install_phpunit;
		;;
	"nodejs")
		install_nodejs;
		;;
	"apidoc")
		install_apidoc;
		;;
	"fail2ban")
		install_fail2ban;
		;;
	*)
		echo "Opção selecionada inválida";
    		exit 1
    		;;
esac

exit 0;
