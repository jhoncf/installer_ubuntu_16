#/bin/bash

install_lamp(){

	echo "Update nos pacotes";
	sudo apt-get update;

	echo "Instalando apache2";
	sudo apt-get install apache2;

	echo "Instalando curl";
	sudo apt-get install curl;

	echo "Instalando mysql-server";
	sudo apt-get install mysql-server;
	sudo mysql_secure_installation

	echo "Instalando PHP";
	sudo apt-get install php libapache2-mod-php php-mcrypt php-mysql;

	echo "Restart do apache para ativação do PHP";
	sudo systemctl restart apache2;

	exit 0;
}

install_mongodb(){
	
	echo "Importando public key";
	sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6;
	
	echo "Adicionando source do repositório";
	echo "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list;
	
	echo "Update nos pacotes";	
	sudo apt-get update;

	echo "Instalando mongodb";
	sudo apt-get install -y mongodb-org;

        echo "Iniciando serviço";
	sudo service mongod start;

	exit 0;
}

install_docker(){

	echo "Update repositório";
	sudo apt-get update;

	echo "Importando public key";
	sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D;

	echo "Adicionando repositório docker à lista de source";
	sudo apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main';

        echo "Update repositório";
	sudo apt-get update;

	echo "Instalando Docker";
	sudo apt-get install -y docker-engine;

	sudo systemctl status docker;

	echo "Adicionando usuário atual ao grupo do docker";
	sudo usermod -aG docker $(whoami);

	echo "Done!";

	exit 0;
}

install_composer(){
	echo "Update repositório";
        sudo apt-get update;

	sudo apt-get install curl php5-cli;
	
	curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer;

	composer;

	exit 0;
}

install_phpunit(){
	cd ~/
	wget https://phar.phpunit.de/phpunit.phar;
	chmod +x phpunit.phar;
	sudo mv phpunit.phar /usr/local/bin/phpunit;
	phpunit --version;
	exit 0;
}

install_nodejs(){
	sudo apt-get update;
	sudo apt-get install nodejs;
	sudo apt-get install npm;

	echo "";
	echo "Finalizado!";
}

install_apidoc(){
	install_nodejs;
        sudo apt-get install nodejs-legacy;
	sudo npm install apidoc -g;
}

install_fail2ban(){
	sudo apt-get update;
	sudo apt-get install fail2ban;
	awk '{ printf "# "; print; }' /etc/fail2ban/jail.conf | sudo tee /etc/fail2ban/jail.local;
}

install_terminator(){
	printf "Instalando Terminator \n\n";
	sudo apt-get install -y terminator;
	printf "\n\n Terminator Instalado\n\n";
}

install_google-chrome(){
	printf "Instalando Google Chrome \n\n";
	sudo apt-get install -y gdebi;
	wget -P /tmp https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb;
	sudo gdebi -n /tmp/google-chrome-stable_current_amd64.deb;
	printf "\n\n Google Chrome Instalado\n\n";
}

install_vscode(){
	printf "Instalando Visual Studio Code \n\n";
	curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg;
	sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg;
	sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list';
	sudo apt-get update;
	sudo apt-get install -y code;
	printf "\n\n Visual Studio Code Instalado\n\n";
}

install_dock_plank(){
		printf "Instalando Dock Plank \n\n";
		sudo add-apt-repository -y ppa:ricotz/docky;
		sudo apt-get update;
		sudo apt-get install -y plank;
		printf "\n\n Dock Plank Instalado\n\n";
}

install_theme(){
	printf "Instalando Theme Arc \n\n";
	wget -P /tmp https://github.com/LinxGem33/OSX-Arc-White/releases/download/v1.4.3/osx-arc-collection_1.4.3_amd64.deb;
	sudo dpkg -i /tmp/osx-arc-collection_1.4.3_amd64.deb;
	printf "\n\n Theme Arc Instalado  \n\n";
}

install_slack(){
	printf "Instalando Slack \n\n";
	wget -P /tmp https://downloads.slack-edge.com/linux_releases/slack-desktop-2.7.1-amd64.deb;
}

install_starter(){
	install_terminator;
	install_google-chrome;
	install_vscode;
	install_dock_plank;
	install_theme;
}

case "$1" in
	"lamp")
		install_lamp;
    	;;
	"mongodb")
		install_mongodb;
		;;
	"docker")
		install_docker;
		;;
	"composer")
		install_composer;
		;;
	"phpunit")
		install_phpunit;
		;;
	"nodejs")
		install_nodejs;
		;;
	"apidoc")
		install_apidoc;
		;;
	"fail2ban")
		install_fail2ban;
		;;
	"vscode")
		install_vscode;
		;;
	"google-chrome")
		install_google-chrome;
		;;
	"theme")
		install_theme;
		;;
	"starter")
		sudo apt-get install -y chrome-gnome-shell;
		install_starter;
		;;
	"terminator")
		install_terminator;
		;;
	"dock_plank")
		install_dock_plank;
		;;
	*)
		echo "Opção selecionada inválida";
    	exit 1
    	;;
esac

exit 0;
